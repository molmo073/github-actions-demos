name: CI - build artifacts I

on:
  push:
    branches: [main]
    paths: ["hangman-api/**"]
  pull_request:
    branches: [main]
    paths: ["hangman-api/**"]

jobs:
  build:   # primer job llamado build
    runs-on: ubuntu-latest
    steps:                                
    - name: Checkout-build
      uses: actions/checkout@v4           
    - name: Setup Node.js node-version
      uses: actions/setup-node@v4         
      with:
        node-version: 20
    - name: build
      working-directory: ./hangman-api
      run: |
        npm ci                           
        npm run build --if-present
    - name: Upload Artifact (dependencias)    # Guarda los archivos o carpetas generadas durante el job en este caso en la carpeta node_modules 
      uses: actions/upload-artifact@v4        # Al sistema de almacenamiento de GitHub Actions. 
      with: 
        name: dependencias
        path: hangman-api/node_modules/
        include-hidden-files: true            # Incluye las carpetas ocultas es necesario
          

  test:   # segundo job llamado test
    needs: build  
    runs-on: ubuntu-latest
    steps:
    - name: Checkout-test
      uses: actions/checkout@v4
    - name: Download Artifact (dependencias)  # Recupera archivos o carpetas previamente subidos con upload-artifac
      uses: actions/download-artifact@v4
      with: 
        name: dependencias                # Debe coincidir con el nombre del artefacto subido.
        path: hangman-api/node_modules/   # # Carpeta destino donde se colocar√° el contenido. Esto evita tener que ejecutar npm ci de nuevo, ahorrando tiempo.
    - name: test
      working-directory: ./hangman-api
      run: |
        ls -la
        npm test